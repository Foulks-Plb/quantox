// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @default(cuid()) @id
  name          String
  email         String       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  history       History[]
  tokens        Token[]
  @@map(name: "users")
}

model Token {
  id                    String     @default(cuid()) @id
  author                User?      @relation(fields: [authorId], references: [id])
  authorId              String?
  token                 String
  amount                Float     
  locationBlockchain    String?
  locationApp           String
  locationType          String
  @@unique([locationBlockchain, locationApp, locationType, token, authorId])
}

model History {
  id            String        @default(cuid()) @id
  author        User?         @relation(fields: [authorId], references: [id])
  authorId      String?
  action        String
  tokenFrom               String
  amountFrom              Float     
  locationBlockchainFrom  String?
  locationAppFrom         String
  locationTypeFrom        String
  tokenTo                 String
  amountTo                Float     
  locationBlockchainTo    String?
  locationAppTo           String
  locationTypeTo          String
  processAt     DateTime      @default(now()) @map(name: "process_at")
}






model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}